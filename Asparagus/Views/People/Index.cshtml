@model PaginatedList<Asparagus.Models.Person>
@using Asparagus.Models
@using Asparagus.Controllers

@{
    ViewData["Title"] = "Список";
}
<a asp-action="Create">Вернуться</a>
<br />

<h1 style="text-align:center">Список</h1>

<table id="dtBasicExample" class="table table-striped table-bordered table-sm" cellspacing="0" width="100%">
    <thead>
        <tr style="text-align:center">
            <th>
                <a asp-action="Index" style="color:#0366d6">№</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSort"]">
                    Имя
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CreateDataSort"]">
                    Дата первого <br /> употребления спаржи
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CountOfAsparagusSort"]">
                    Количество <br /> спаржи
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ModifiedDataSort"]">
                    Дата последнего <br /> употребления спаржи
                </a>
            </th>
            <th>
                <a asp-action="Index" style="color:#0366d6">Почта</a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr style="text-align:center">
                <td>
                    @Html.Raw(PeopleController.countNumber++)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreateDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CountOfAsparagus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifiedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.PreviousPage ? "disabled" : "";
    var nextDisabled = !Model.NextPage ? "disabled" : "";
}

@if (Model.PreviousPage)
{
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-isPreview="true" 
       class="btn btn-default @prevDisabled">
        Preview
    </a>
}
@if (Model.NextPage)
{
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-default @nextDisabled">
        Next
    </a>
}